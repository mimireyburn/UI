<head>
  <title>Pocket Kitchen</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <style>
    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */
    .row.content {height: 550px}
    
    /* Change body font */ 
    body, a{
      font-family: 'Atkinson Hyperlegible', sans-serif; 
      background-color: whitesmoke;
    }

    /* Set gray background color and 100% height */
    .sidenav {
      height: 100%;
      padding: 20px;
      background-color: white;
    }

    .inventory {
      padding: 20px;
      margin-top: 20px;
      border: 2px dashed grey;
      border-radius: 5px;
    }

    .nav-pills > li.active > a:hover{
      background-color: #afbc26;
      color:whitesmoke;
    }

    .nav-pills > li.active > a:active{
      background-color: #afbc26;
      color:whitesmoke;
    } 

    .navbar-nav>li.active>a:active{
      background-color: #afbc26;
      color:whitesmoke;
    }

    .navbar-nav>li:not(.active)>a:hover {
      background-color: ghostwhite;
      color:#afbc26;
    }

    .navbar-nav a{
      color:#afbc26;
    }

    .nav-pills>li:not(.active)>a:hover {
      background-color: ghostwhite;
    }

    .nav-pills a{
      color:#afbc26;
    }

    .btn-info {
      background-color: #afbc26;
      margin-top: 30px;
      border: none
    }

    .btn-danger {
      background-color: red;
      border: none
    }

    .btn-warning {
      background-color: orange;
      border: none
    }

    .btn-success {
      background-color: #afbc26;
      border: none
    }

    .table {
      background-color: white;
    }
    
    .row.content{
      background-color: whitesmoke;
      height: 100%;
    }

    /* On small screens, set height to 'auto' for the grid */
    @media screen and (max-width: 767px) {
      .row.content {height: auto;} 
    }
  </style>
</head>
<body onload="getData(); getRecipes();">

<!-- MOBILE -->

<nav class="navbar navbar-inverse visible-xs" style="background-color:white">
  <div class="container-fluid">
    <div class="navbar-header" style="background-color:#afbc26">
      <button type="button" style="background-color:#afbc26" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>         
        <span class="icon-bar"></span>                
      </button>
      <a class="navbar-brand" style="color:white; background-color: #afbc26;" href="#">Pocket Kitchen</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <li><a id="DashButton" href="#section4">Dashboard</a></li>
        <li><a id="InventButton" href="#section1">Inventory</a></li>
        <li><a id="MenuButton" href="#section2">Recipes</a></li>
        <li><a id="NotifButton" href="#section3">Notifications</a></li>
        <!-- <li><a href="#">Geo</a></li> -->
      </ul>
    </div>
  </div>
</nav>

<!-- DESKTOP -->
<div class="container-fluid" >
  <div class="row content" >
    <div class="col-sm-3 sidenav hidden-xs" >
      <h2>Pocket Kitchen</h2>
      <ul class="nav nav-pills nav-stacked" >
        <li><a id="Web-DashButton" href="#section4">Dashboard</a></li>
        <li><a id="Web-InventButton" href="#section1">Inventory</a></li>
        <li><a id="Web-MenuButton" href="#section2">Recipes</a></li>
        <li><a id="Web-NotifButton" href="#section3">Notifications</a></li>
        <!-- <li><a href="#section3">Geo</a></li> -->
      </ul><br>
    </div>
    <br>
    
    <div class="col-sm-9">
      <div class="col-sm-9">
        <h1>Hello, Mimi!</h1> 
        <p>
            <script> 
              document.write(new Date().toLocaleDateString("en-GB", {weekday:"long", month:"long", day:"numeric", year:"numeric"})); 
            </script>
        </p>
      </div>
      <div class="col-sm-3">
        <a id="refresh" class="btn btn-info btn-lg">
          <span class="glyphicon glyphicon-refresh"></span> Refresh
        </a>
      </div>
    </div>


    <!-- Success Modal -->
    <div class="modal fade" id="successModal" role="dialog">
      <div class="modal-dialog">
      
        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">You've got time!</h4>
          </div>
          <div class="modal-body">
            <p>Take a look at your recipe suggestions - why not try making a meal from random ingredients?</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          </div>
        </div>
        
      </div>
    </div>


    <!-- Warning Modal -->
    <div class="modal fade" id="warningModal" role="dialog">
      <div class="modal-dialog">
      
        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Use me soon!</h4>
          </div>
          <div class="modal-body">
            <p>Take a look at your recipe suggestions by expiry to use up this item in a tasty way! If you don't have time to use this item, put it on Olio for someone else to collect!</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          </div>
        </div>
        
      </div>
    </div>

    
    <!-- Danger Modal -->
    <div class="modal fade" id="dangerModal" role="dialog">
      <div class="modal-dialog">
      
        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Uh oh!</h4>
          </div>
          <div class="modal-body">
            <p>WRAP recommends a "sniff-test" to determine if this item has expired. If there are visible signs of inedible decay, then it's probably time to dispose of this item! Raw fruit, veg and salad can be composted at home. Otherwise, use your food waste bin!</p>
            <button type="button">
              <a href="https://www.recyclenow.com/recycle-an-item/food-waste" target="_blank">Check your local food waste disposal options</a></button>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          </div>
        </div>
        
      </div>
    </div>


    <div class="col-sm-8" style="padding-left:30px; padding-right:30px">
      <div class="inventory" id="Dashboard" >
        <h4>Dashboard</h4>
        <p>Welcome back - take a look at what you have in stock and cook up a plan for your next meal!</p>
      </div>
      <div class="inventory" id="Inventory" style="display:none">
        <h4>Food Inventory</h4>
        <p id="items"></p>
        <div style="overflow:auto; width:100%;">
          <table class="table" style="width:100%"  id="table" align = "center" border="1px"></table>
        </div>
      </div>
      <div class="inventory" id="Recipes" style="display:none">
        <h4>Top 5 Recipes by Inventory</h4>
        <p id="recipes" ></p>
        <table class="table" id="menu-table" align = "center" border="1px"></table>
        <h4>Top 5 Recipes by Expiry</h4>
        <table class="table" id="exp-table" align = "center" border="1px"></table>
      </div>
      <div class="inventory" id="Notifications" style="display:none" >
          <h4>Notifications</h4>
          <p> Get Telegram alerts about your food inventory </p>
          <a class="btn btn-info btn-lg" href="https://t.me/+SI5QQvoAYv83MGQ8" target="_blank">Get notifications</a>
      </div>
    </div>
      

</body>
<script>

/////////////////  START JAVASCRIPT
function getColumn(selector, column) {
  var rows = document.querySelector(selector).getElementsByTagName('tr');
  return [].slice.call(rows).map(function(tr) {
      return tr.getElementsByTagName('td')[column].innerText;
  });
}

const onClick = function() {
  // console.log(this.innerHTML)
  var x = document.getElementById(this.innerHTML);
  var y = document.getElementById(this.id)
  const list = y.classList;
  if (x.style.display === "none") {
    document.getElementById('Inventory').style.display="none";
    document.getElementById('Notifications').style.display="none";
    document.getElementById('Recipes').style.display="none";
    document.getElementById('Dashboard').style.display="none";
    
    document.getElementById('Web-MenuButton').style.backgroundColor = "white";
    document.getElementById('Web-NotifButton').style.backgroundColor = "white";
    document.getElementById('Web-InventButton').style.backgroundColor = "white";
    document.getElementById('Web-DashButton').style.backgroundColor = "white";

    document.getElementById('Web-MenuButton').style.color = "#afbc26";
    document.getElementById('Web-NotifButton').style.color = "#afbc26";
    document.getElementById('Web-InventButton').style.color = "#afbc26";
    document.getElementById('Web-DashButton').style.color = "#afbc26";

    document.getElementById('MenuButton').style.backgroundColor = "white";
    document.getElementById('NotifButton').style.backgroundColor = "white";
    document.getElementById('InventButton').style.backgroundColor = "white";
    document.getElementById('DashButton').style.backgroundColor = "white";

    document.getElementById('MenuButton').style.color = "#afbc26";
    document.getElementById('NotifButton').style.color = "#afbc26";
    document.getElementById('InventButton').style.color = "#afbc26";
    document.getElementById('DashButton').style.color = "#afbc26";

    x.style.display = "block";
    y.style.backgroundColor = "#afbc26";
    y.style.color = "whitesmoke";
    list.add("active");
  } else {
    x.style.display = "none";
    y.style.backgroundColor = "white";
    y.style.color = "#afbc26";
    list.remove("active");
  }
}

  document.getElementById('MenuButton').onclick = onClick;
  document.getElementById('NotifButton').onclick = onClick;
  document.getElementById('InventButton').onclick = onClick;
  document.getElementById('DashButton').onclick = onClick;
  
  document.getElementById('Web-MenuButton').onclick = onClick;
  document.getElementById('Web-NotifButton').onclick = onClick;
  document.getElementById('Web-InventButton').onclick = onClick;
  document.getElementById('Web-DashButton').onclick = onClick;

  //////////////  Initialise Variables & Functions here
  var variables = [];
  var timestamp = [];
  var recipes = [];
  var expiry = [];
  var date = Date.now() / 1000;
    
  var DateDiff = {

      inHours: function(d1, d2) {
  
          return Math.floor((d2-d1)/(3600));
      },

      inDays: function(d1, d2) {

          return Math.floor((d2-d1)/(24*3600));
      },
  };

  let text = "";
  function createList(foods, timestamp, date) {
      for (let i = 0; i < foods.length; i++) {
          text += foods[i].toLowerCase() +"    "+ DateDiff.inDays(timestamp[i], date) + " days" + "<br>";
          }
  return text; 
  }

  let menu = "";
  function createMenu(recipes) {
      for (let i = 0; i < recipes.length; i++) {
          menu += (i+1) + ". " + recipes[i] + "<br>";
          }
  return menu; 
  }

    /////////////////////  GET DATA ()

  function getData() {
      window.fetch('/getdata', {
          "method": "POST",
          "headers": {"Content-Type": "application/json"}
      }).then(function (responseObj) {
          foods = [];
          timestamp = [];
          expiry = [];
          return  responseObj.json()
      }).then(function (list) {
          var cols = [];
          var x = [];
          for (var i = 0; i < list.length; i++) {
              for (var k in list[i]) {
                  if (cols.indexOf(k) === -1) {
                        
                      // Push all keys to the array
                      cols.push(k);
                  }
              }
          }
          
          // Create a table element
          var table = document.createElement("table");
          table.classList.add("table")
            
          // Create table row tr element of a table
          var tr = table.insertRow(-1);
          
          // remove first col data 
          for (var i = 1; i < cols.length+1; i++) {
              // Create the table header th element
              var theader = document.createElement("th");
              theader.innerHTML = cols[i];
              if (i==5) {
                theader.innerHTML = "Time until expiry"
              }
              // Append columnName to the table row
              tr.appendChild(theader);
          }
            
          // Adding the data to the table
          for (var i = 0; i < list.length; i++) {
              // Create a new row
              trow = table.insertRow(-1);
              // remove first col header
              for (var j = 1; j < cols.length; j++) {
                  var cell = trow.insertCell(-1);
                  if (list[i][cols[j]]==="N/A") {
                    let expiry = prompt("What date does the "+list[i][cols[1]]+" expire? (DD/MM/YY)")
                    list[i][cols[j]] = expiry;
                    cell.innerHTML = list[i][cols[j]];
                    var send = {"_id": list[i][cols[0]], "Expiry Date": expiry};
                    var sendString = JSON.stringify(send);
                    let testReq = window.fetch("/expiry", {
                      method: "POST",
                      body: sendString,
                      headers: {
                        "Content-Type": "application/json",
                      }
                    })
                    // if (j===3) {

                    // }
                    if (j===4) {
                      try {
                        var parts=expiry.split('/');
                      }
                      catch(err) {
                        console.log(err.message);
                      }
                      var mydate = new Date((20+parts[2]), parts[1] - 1, parts[0]); 
                      var cell = trow.insertCell(-1);
                      var today = new Date()
                      var diff = mydate-today.getTime()
                      var days = Math.floor(diff/(1000*3600*24))
                      if (days>=3) {
                        cell.innerHTML = '<button type="button" class="btn btn-success" style="color:"white" data-toggle="modal" data-target="#myModal">'+ days + " days" + '</button>';
                      }
                      else if (days>=1) {
                        cell.innerHTML = '<button type="button" class="btn btn-warning" style="color:"white" data-toggle="modal" data-target="#myModal">'+ days + " days" + '</button>';
                      }
                      else {
                        cell.innerHTML = '<button type="button" class="btn btn-danger" style="color:"white" data-toggle="modal" data-target="#myModal">'+ days + " days" + '</button>';
                      }
                      // cell.innerHTML = days + " days";
                      x[i] = (list[i][cols[1]], days)
                    }
                  }
                  // If there is an expiry date, set 
                  else {
                    let expiry = list[i][cols[3]];
                    cell.innerHTML = list[i][cols[j]];
                    
                    if (j===4) {
                      var parts = expiry.split('/');
                      var mydate = new Date((20+parts[2]), parts[1] - 1, parts[0]); 
                      var cell = trow.insertCell(-1);
                      var today = new Date()
                      var diff = mydate-today.getTime()
                      var days = Math.floor(diff/(1000*3600*24))
                      if (days>=3) {
                        cell.innerHTML = '<button type="button" class="btn btn-success" style="color:"white" data-toggle="modal" data-target="#successModal">'+ days + " days" + '</button>';
                      }
                      else if (days>=1) {
                        cell.innerHTML = '<button type="button" class="btn btn-warning" style="color:"white" data-toggle="modal" data-target="#warningModal">'+ days + " days" + '</button>';
                        var send = {Message: "Your " + list[i][cols[1]] + " is expiring soon - check your recipe suggestions to use it today!"}
                        var sendString = JSON.stringify(send);
                        // console.log(send)
                        let newReq = window.fetch("/telegram", {
                          method: "POST",
                          body: sendString,
                          headers: {
                            "Content-Type": "application/json",
                          }
                        })
                      }
                      else {
                        cell.innerHTML = '<button type="button" class="btn btn-danger" style="color:"white" data-toggle="modal" data-target="#dangerModal">'+ days + " days" + '</button>';
                        var send = {Message: "Check if the " + list[i][cols[1]] + " is edible and use it up today!"}
                        var sendString = JSON.stringify(send);
                        // console.log(send)
                        let newReq = window.fetch("/telegram", {
                          method: "POST",
                          body: sendString,
                          headers: {
                            "Content-Type": "application/json",
                          }
                        })
                      }
                      x[i] = [list[i][cols[1]], days];
                    }
                  }
              }
            }
            
          // Add the newly created table containing json data
          var el = document.getElementById("table");
          // console.log(el)
          el.innerHTML = "";
          el.appendChild(table);
      return x
      })
      // .then(function (x) {
      //   var ingr = getColumn('#menu-table',2)
      //   // console.log(ingr)
      //   x.forEach(element => 
        
      //   console.log(element[0])
      //   )
      // })
      // Catch errors
      .catch(function (error) {console.log(error)});
}


/////////////////////  GET RECIPES ()

function getRecipes() {
  window.fetch('/getrecipes', {
        "method": "POST",
        "headers": {"Content-Type": "application/json"}
    }).then(function (responseObj){
      recipes = [];
      return  responseObj.json()
    }).then(function (list) {
      var cols = [];
          
        for (var i = 0; i < list.length; i++) {
            for (var k in list[i]) {
                if (cols.indexOf(k) === -1) {
                      
                    // Push all keys to the array
                    cols.push(k);
                }
            }
        }
        
        // Create a table element
        var table = document.createElement("table");
        table.classList.add("table")
          
        // Create table row tr element of a table
        var tr = table.insertRow(-1);
        var theader = document.createElement("th");
        theader.innerHTML = "Rank";
        tr.appendChild(theader);
        for (var i = 0; i < 3; i++) {
              
            // Create the table header th element
            var theader = document.createElement("th");
            
            theader.innerHTML = cols[i];
            
            // Append columnName to the table row
            tr.appendChild(theader);
        }
        
        // Adding the data to the table
        for (var i = 0; i < list.length; i++) {
          trow = table.insertRow(-1);
          var cell = trow.insertCell(-1);
          cell.innerHTML = i+1
          // Create a new row
          // trow = table.insertRow(-1);
            for (var j = 0; j < 3; j++) {
                var cell = trow.insertCell(-1);
                if (j===0) {
                  cell.innerHTML = "<a href='" + list[i][cols[3]] + "''>" + list[i][cols[j]] + "</a>";
                }
                else if (j===2) {
                  cell.innerHTML = Math.round(list[i][cols[j]]*100) / 100;
                }
                else {
                  cell.innerHTML = list[i][cols[j]];
                }
            }
        }
        // Add the newly created table containing json data
        var el = document.getElementById("menu-table");
        el.innerHTML = "";
        el.appendChild(table);
        var recipetable = el
        return recipetable
      })
      .then(function(rt) {
        var menuTableArray = [];
        var ingrTableArray = [];

        $("table#menu-table tr").each(function() {
            var arrayOfThisRow = [];
            var tableData = $(this).find('td');
            if (tableData.length > 0) {
                tableData.each(function() { arrayOfThisRow.push($(this).text()); });
                menuTableArray.push(arrayOfThisRow);
            }
        });

        $("table#table tr").each(function() {
            var arrayOfThisRow = [];
            var tableData = $(this).find('td');
            if (tableData.length > 0) {
                tableData.each(function() { arrayOfThisRow.push($(this).text()); });
                ingrTableArray.push(arrayOfThisRow);
            }
        });

        var inventory = [];
        var ingredients = [];
        var score = [];
        var exp = [];
        var name = [];
        

        ingrTableArray.forEach(function (item, index) {
          inventory.push(item[0])
          exp.push(item[4].match(/(-?\d+)/g ))
        })

        menuTableArray.forEach(function (thing, stuff) {
          name.push(thing[1])
          ingredients.push(thing[2])
          score.push(thing[3])
        })

        len = score.length;
        var newScore = new Array(len).fill(0);
        
        inventory.forEach(function(item, number) {
          ingredients.forEach(function (recipe, index) {
            if (recipe.includes(item) === true) {
              newScore[index] -= exp[number]
            }
          })
        })

        var newTable = [];
        newScore.forEach(function(value, num) {
          newTable[num] = [0, name[num], ingredients[num], value]
        })

        let byExpiry = newTable.sort( (a, b) => {
          return b[3] - a[3]
        })

        byExpiry.forEach(function(something, nom) {
          byExpiry[nom][0] = nom+1
        })

        Titles = ["Rank", "Recipe", "Ingredients", "Score"]
    
        //create a Table Object
        let table = document.createElement('table');
        table.classList.add("table")

        var tr = table.insertRow(-1);
        var theader = document.createElement("th");
        for (var i = 0; i < 4; i++) {
              
            // Create the table header th element
            var theader = document.createElement("th");
            
            theader.innerHTML = Titles[i];
            
            // Append columnName to the table row
            tr.appendChild(theader);
        }
        //iterate over every array(row) within byExpiry
        for (let row of byExpiry) {
        //Insert a new row element into the table element
          table.insertRow();
        //Iterate over every index(cell) in each array(row)
          for (let cell of row) {
        //While iterating over the index(cell)
        //insert a cell into the table element
            let newCell = table.rows[table.rows.length - 1].insertCell();
        //add text to the created cell element
            newCell.textContent = cell;
          }
        }
        var el = document.getElementById("exp-table");
        el.innerHTML = "";
        el.appendChild(table);
        //append the compiled table to the DOM
        // document.body.appendChild(table);
        
      })
      .catch(function (error) {console.log(error)});
};

var refresh = document.getElementById("refresh")

// Function for reloading the page
function getRefresh () {
    window.location.reload(true)
}
// Reload page on button click
refresh.onclick=getRefresh;

</script>